Goal: Learn how to create an upgreadable smart contract

------------DONE------------
I. Learn just watch first. DONE

II. Then take notes. DONE
------------TODO------------


III. Then execute the code based on the latest version. https://docs.openzeppelin.com/learn/upgrading-smart-contracts?pref=hardhat

D:& cd D:\USER\Downloads\ATLAS\Projects\Mastering-Security-Token-ERC-3643\Upgradeable-Smart-Contract-Mastering


npx hardhat node

npm install --save-dev @openzeppelin/hardhat-upgrades

https://docs.openzeppelin.com/learn/setting-up-a-node-project#creating-a-project

npm init -y

yarn init

yarn add --dev hardhat

npm install --save-dev hardhat

npx hardhat compile --force

npm install @openzeppelin/contracts

npx hardhat node

npm install --save-dev @nomicfoundation/hardhat-ethers ethers

npx hardhat run --network localhost scripts/deploy.js


Interacting with hardhat console:

npx hardhat console --network localhost
Box deployed to: 0x5FbDB2315678afecb367f032d93F642f64180aa3

const Box = await ethers.getContractFactory('Box')
const box = Box.attach('0x5FbDB2315678afecb367f032d93F642f64180aa3')

await box.store(42)
await box.retrieve()

npx hardhat run --network localhost scripts/index.js

DEPLOYING UPGRADEABLE

npm install --save-dev @openzeppelin/hardhat-upgrades

npx hardhat run --network localhost scripts/deploy_upgradeable_box.js

----------------
Box deployed to:  0xa513E6E4b8f2a923D98304ec87F64353C4D5C853

npx hardhat console --network localhost


const Box = await ethers.getContractFactory('Box')

const box = Box.attach('0xa513E6E4b8f2a923D98304ec87F64353C4D5C853')

(await box.retrieve()).toString();

await box.increment()

(await box.retrieve()).toString();

--------------------------------------------------

npx hardhat run --network localhost scripts/upgrade_box.js

npx hardhat console --network localhost

const BoxV2 = await ethers.getContractFactory('BoxV2');

const box = await BoxV2.attach('0xa513E6E4b8f2a923D98304ec87F64353C4D5C853');

await box.increment();

(await box.retrieve()).toString();


CONTINUE HERE

FOllow the environment tutorial
https://docs.openzeppelin.com/learn/deploying-and-interacting





-------------------------------------------------
-----------------OTHER TUTORIALS-----------------
https://docs.alchemy.com/docs/upgradeable-smart-contracts

Upgrade ERC-20





------------------------------------


QUESTIONS

When you deploy a new implementation, if you don't add the previous functions you had in V1 to V2, do they just dissapear and they cant be called anymore? So if I want to have V1 functions in V2 I would need to copy and paste them?

